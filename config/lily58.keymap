/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/{
	behaviors {
		ht: hold_tap {
			label = "hold_tap";
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-terms-ms = <220>;
			quick-tap-ms = <150>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};
	};
	
	conditional_layers {
		compatible = "zmk, conditional-layers";
		tri_layer {
			if-layers = <1 2>;
			then-layer = <3>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
// ------------------------------------------------------------------------------------------------------------
// |    ESC   |   1 !   |  2 " ²  |  3 § ³  |   4 $   |   5 %  |				|   6 &   |  7 / {  |  8 ( [  |  9 ) ]  |  0 = }  |  ß ? \  |
    &kp ESC    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5					 &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
// |    TAB   |   Q @   |    W    |    E €  |    R    |    T   |				|    Z    |    U    |    I    |    O    |    P    |    Ü    |
    &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T					 &kp Z     &kp U     &kp I     &kp O     &kp P     &kp LBKT
// |   LSHFT  |    A    |    S    |    D    |    F    |    G   |				|    H    |    J    |    K    |    L    |    Ö    |    Ä    |
    &kp LSHFT  &kp A     &kp S     &kp D     &kp F     &kp G				 	 &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
// |   LCTRL  |    Y    |    X    |    C    |    V    |    B    |    {    |	|	}	|    N    |   M µ   |   , ;   |   . :   |   - _   |    # '  |
    &kp LCTRL  &kp Y     &kp X     &kp C     &kp V     &kp B     &kp LC(LA(N7)   &kp RC(RA(N0)   &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp BSLH
// 				  |   LALT  |   GUI   | LOWER   |  SPACE  |     | ENTR    	|  RAISE  | BSPC DEL|   AltGr   |
				   &kp LALT  &kp LGUI  &mo 1     &kp SPACE       &kp RET   	 &mo 2     &lp DEL BSPC  &kp LC(LA)
			>;
		};

		lower_layer {				
			bindings = <
// ------------------------------------------------------------------------------------------------------------
// |    ^ °   |    !    |    "    |    §    |    $    |    %   |				|         |    7    |    8    |    9    |    *    |    +    |
    &kp GRAVE  &kp EXCL  &kp DQT   &kp AT    &kp DOLLAR &kp PRCNT  				 &trans    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MULTIPLY &kp KP_PLUS
// |    TAB   |    #    |    ^    |    &    |    ~    |    |   |				|    (    |    4    |    5    |    6    |    /    |    -    |
    &trans     &kp HASH  &kp CARET &kp AMPS  &kp TILDE2 &kp PIPE2 				 &kp KP_LPAR &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DIVIDE &kp KP_SUBSTRACT
// |   LSHFT  |    #    |    [    |    ]    |    (    |    )   |				|     )    |    1    |    2    |    3    |    %    |         |
    &trans     &kp NUHS  &kp LBKT  &kp RBKT  &kp LPAR  &kp RPAR 				 &kp KP_RPAR      &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp  &trans
// |   LCTRL  |     \   |    {    |    }    |    <    |    >   |    <    |     |    >   	|          |    0    |    ,    |    .    |   ENTR  |         |
    &trans     &kp NUBS   &kp LBRC &kp RBRC  &kp LT    &kp GT   &kp LESS_THAN   &kp GREATER_THAN &trans     &kp KP_N0 &kp KP_COMMA &kp KP_DOT &kp RET &trans
// 				  |   LALT  |   GUI   |  LOWER  |  SPACE  |    |  ENTR  	|  RAISE  |   BSPC  |   AltGr  |
				   &trans    &trans    &trans    &trans         &trans  	 &trans    &trans    &trans	
			>;
		};
		
		tri_layer {
			bindings = <
// ------------------------------------------------------------------------------------------------------------
// |    ESC   |  INS    |   POS1  |         |   END   |  LCAPS  |			|  BTCLR  |    F7   |    F8   |    F9   |    F12   | PWR ON  |
    &trans     &kp INS   &kp HOME  &trans    &kp END   &kp LCAPS	   		 &bt BT_CLR &kp F7   &kp F8    &kp F9    &kp F12    &ext_power EP_O
// |    TAB   |   DEL   |  BILD ^ |    ^    |  BILD v |   PRNT  |			|   BT1   |    F4   |    F5   |    F6   |    F11   | PWR OFF |
    &trans     &kp DEL   &kp PG_UP &kp UP &kp PG_DN   &kp PSCRN				 &bt BT_SEL 0 &kp F4 &kp F5    &kp F6    &kp F11    &ext_power EP_OFF
// |   LSHFT  |         |   <-    |    v    |    ->   |  SCRL   |			|   BT2   |    F1   |    F2   |    F3   |    F10   | PWR TGL |
    &trans     &trans       &kp LEFT  &kp DOWN  &kp RIGHT &kp SLCK		  		 &bt BT_SEL 1 &kp F1 &kp F2    &kp F3    &kp F10    &ext_power EP_TOG
// |   LCTRL  |         |         |         |         |         |         |    |        |   BT3   |         |         |         |          |  AltGr  |
    &trans     &trans    &trans    &trans    &trans    &trans   &trans	        &trans   &bt BT_SEL 2 &trans &trans    &trans    &trans     &trans
// 				  |   LALT  |   GUI   |  LOWER  |  SPACE  |    |  ENTR  |  RAISE  |   BSPC  |   DEL   |
				   &trans    &trans    &trans    &trans         &trans   &trans    &trans    &trans	
			>;
		};
	};
};
